{"version":3,"file":"PlayersManagement.js","sources":["../../src/components/admin/players/editor/PlayerBasicInfoForm.tsx","../../src/components/admin/players/editor/PlayerPhysicalStatsForm.tsx","../../src/components/admin/players/editor/PlayerMatchStatsForm.tsx","../../src/components/admin/players/editor/PlayerEditor.tsx","../../src/pages/admin/PlayerEditor.tsx","../../src/components/admin/players/PlayerManagementHeader.tsx","../../src/components/admin/players/SearchBar.tsx","../../src/components/admin/players/PlayersList.tsx","../../src/pages/admin/PlayersManagement.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Player } from '@/types/player';\nimport { getTeamsData } from '@/utils/teamsData';\n\ninterface PlayerBasicInfoFormProps {\n  formData: Player;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => void;\n}\n\nconst PlayerBasicInfoForm: React.FC<PlayerBasicInfoFormProps> = ({ formData, handleChange }) => {\n  const teams = getTeamsData();\n  \n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <Label htmlFor=\"name\">ФИО игрока</Label>\n        <Input \n          id=\"name\" \n          name=\"name\" \n          value={formData.name} \n          onChange={handleChange}\n          required\n        />\n      </div>\n      \n      <div>\n        <Label htmlFor=\"position\">Позиция</Label>\n        <select \n          id=\"position\" \n          name=\"position\" \n          value={formData.position} \n          onChange={handleChange}\n          className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n          required\n        >\n          <option value=\"Вратарь\">Вратарь</option>\n          <option value=\"Защитник\">Защитник</option>\n          <option value=\"Полузащитник\">Полузащитник</option>\n          <option value=\"Нападающий\">Нападающий</option>\n        </select>\n      </div>\n      \n      <div>\n        <Label htmlFor=\"number\">Номер</Label>\n        <Input \n          id=\"number\" \n          name=\"number\" \n          type=\"number\" \n          value={formData.number} \n          onChange={handleChange}\n          min=\"1\"\n          max=\"99\"\n          required\n        />\n      </div>\n      \n      <div>\n        <Label htmlFor=\"nationality\">Национальность</Label>\n        <Input \n          id=\"nationality\" \n          name=\"nationality\" \n          value={formData.nationality} \n          onChange={handleChange}\n          required\n        />\n      </div>\n      \n      <div>\n        <Label htmlFor=\"birthDate\">Дата рождения</Label>\n        <Input \n          id=\"birthDate\" \n          name=\"birthDate\" \n          value={formData.birthDate} \n          onChange={handleChange}\n          placeholder=\"ДД.ММ.ГГГГ\"\n          required\n        />\n      </div>\n      \n      <div>\n        <Label htmlFor=\"teamId\">Команда</Label>\n        <select \n          id=\"teamId\" \n          name=\"teamId\" \n          value={formData.teamId} \n          onChange={handleChange}\n          className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n          required\n        >\n          {teams.map(team => (\n            <option key={team.id} value={team.id}>{team.name}</option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerBasicInfoForm;\n","\nimport React from 'react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Player } from '@/types/player';\n\ninterface PlayerPhysicalStatsFormProps {\n  formData: Player;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => void;\n}\n\nconst PlayerPhysicalStatsForm: React.FC<PlayerPhysicalStatsFormProps> = ({ formData, handleChange }) => {\n  return (\n    <>\n      <div>\n        <Label htmlFor=\"image\">URL фото</Label>\n        <Input \n          id=\"image\" \n          name=\"image\" \n          value={formData.image} \n          onChange={handleChange}\n          required\n        />\n      </div>\n      \n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor=\"height\">Рост (см)</Label>\n          <Input \n            id=\"height\" \n            name=\"height\" \n            type=\"number\" \n            value={formData.height} \n            onChange={handleChange}\n            min=\"150\"\n            max=\"220\"\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"weight\">Вес (кг)</Label>\n          <Input \n            id=\"weight\" \n            name=\"weight\" \n            type=\"number\" \n            value={formData.weight} \n            onChange={handleChange}\n            min=\"50\"\n            max=\"120\"\n            required\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PlayerPhysicalStatsForm;\n","import React from 'react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Player } from '@/types/player';\n\ninterface PlayerMatchStatsFormProps {\n  formData: Player;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => void;\n}\n\nconst PlayerMatchStatsForm: React.FC<PlayerMatchStatsFormProps> = ({ formData, handleChange }) => {\n  return (\n    <div className=\"space-y-4\">\n      <h3 className=\"text-lg font-semibold\">Статистика матчей</h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor=\"matches\">Матчи</Label>\n          <Input \n            id=\"matches\" \n            name=\"matches\" \n            type=\"number\" \n            min=\"0\"\n            value={formData.matches} \n            onChange={handleChange}\n            placeholder=\"Количество матчей\"\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"goals\">Голы</Label>\n          <Input \n            id=\"goals\" \n            name=\"goals\" \n            type=\"number\" \n            min=\"0\"\n            value={formData.goals} \n            onChange={handleChange}\n            placeholder=\"Количество голов\"\n          />\n      </div>\n      \n        <div>\n          <Label htmlFor=\"assists\">Голевые передачи</Label>\n          <Input \n            id=\"assists\" \n            name=\"assists\" \n            type=\"number\" \n            min=\"0\"\n            value={formData.assists} \n            onChange={handleChange}\n            placeholder=\"Количество голевых передач\"\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"yellowCards\">Желтые карточки</Label>\n          <Input \n            id=\"yellowCards\" \n            name=\"yellowCards\" \n            type=\"number\" \n            min=\"0\"\n            value={formData.yellowCards} \n            onChange={handleChange}\n            placeholder=\"Количество желтых карточек\"\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"redCards\">Красные карточки</Label>\n          <Input \n            id=\"redCards\" \n            name=\"redCards\" \n            type=\"number\" \n            min=\"0\"\n            value={formData.redCards} \n            onChange={handleChange}\n            placeholder=\"Количество красных карточек\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerMatchStatsForm;\n","\nimport React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Save, X } from 'lucide-react';\nimport { Player } from '@/types/player';\nimport PlayerBasicInfoForm from './PlayerBasicInfoForm';\nimport PlayerPhysicalStatsForm from './PlayerPhysicalStatsForm';\nimport PlayerMatchStatsForm from './PlayerMatchStatsForm';\n\ninterface PlayerEditorProps {\n  player: Player;\n  onSave: (player: Player) => void;\n  onCancel: () => void;\n}\n\nconst PlayerEditor: React.FC<PlayerEditorProps> = ({ player, onSave, onCancel }) => {\n  const [formData, setFormData] = useState<Player>({ ...player });\n  \n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    \n    // Handle numeric fields\n    if (['number', 'height', 'weight', 'matches', 'goals', 'assists', 'yellowCards', 'redCards'].includes(name)) {\n      setFormData({\n        ...formData,\n        [name]: parseInt(value, 10) || 0\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  \n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSave(formData);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Left Column - Basic Info */}\n        <PlayerBasicInfoForm formData={formData} handleChange={handleChange} />\n        \n        {/* Right Column - Physical & Statistics */}\n        <div className=\"space-y-4\">\n          <PlayerPhysicalStatsForm formData={formData} handleChange={handleChange} />\n          <PlayerMatchStatsForm formData={formData} handleChange={handleChange} />\n        </div>\n      </div>\n      \n      <div className=\"flex justify-end space-x-2 pt-4 border-t border-gray-200\">\n        <Button variant=\"outline\" type=\"button\" onClick={onCancel}>\n          <X className=\"mr-2 h-4 w-4\" /> Отмена\n        </Button>\n        <Button type=\"submit\" className=\"bg-fc-green hover:bg-fc-darkGreen\">\n          <Save className=\"mr-2 h-4 w-4\" /> Сохранить\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default PlayerEditor;\n","\nimport React from 'react';\nimport { Player } from '@/types/player';\nimport PlayerEditor from '@/components/admin/players/editor/PlayerEditor';\n\ninterface PlayerEditorPageProps {\n  player: Player;\n  onSave: (player: Player) => void;\n  onCancel: () => void;\n}\n\nconst PlayerEditorPage: React.FC<PlayerEditorPageProps> = ({ player, onSave, onCancel }) => {\n  return (\n    <PlayerEditor \n      player={player} \n      onSave={onSave} \n      onCancel={onCancel}\n    />\n  );\n};\n\nexport default PlayerEditorPage;\n","\nimport React from 'react';\nimport { Plus, User } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface PlayerManagementHeaderProps {\n  teamName: string;\n  primaryColor: string;\n  onAddNew: () => void;\n}\n\nconst PlayerManagementHeader: React.FC<PlayerManagementHeaderProps> = ({ \n  teamName, \n  primaryColor, \n  onAddNew \n}) => {\n  return (\n    <Card className=\"mb-8 bg-gradient-to-br from-white to-gray-50\">\n      <CardHeader className=\"flex flex-row items-center justify-between\">\n        <CardTitle>\n          <div className=\"flex items-center\">\n            <div \n              className=\"w-8 h-8 rounded-full mr-3 flex items-center justify-center\"\n              style={{ backgroundColor: primaryColor || '#2e7d32' }}\n            >\n              <User className=\"h-4 w-4 text-white\" />\n            </div>\n            <span>Управление игроками: {teamName}</span>\n          </div>\n        </CardTitle>\n        <Button onClick={onAddNew} className=\"bg-fc-green hover:bg-fc-darkGreen\">\n          <Plus className=\"mr-2 h-4 w-4\" /> Добавить игрока\n        </Button>\n      </CardHeader>\n    </Card>\n  );\n};\n\nexport default PlayerManagementHeader;\n","\nimport React from 'react';\nimport { Search } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\n\ninterface SearchBarProps {\n  searchTerm: string;\n  setSearchTerm: (term: string) => void;\n}\n\nconst SearchBar: React.FC<SearchBarProps> = ({ searchTerm, setSearchTerm }) => {\n  return (\n    <div className=\"relative mb-6\">\n      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n      <Input\n        className=\"pl-10\"\n        placeholder=\"Поиск игроков по имени или позиции...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport { Pencil, Trash } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Player } from '@/types/player';\n\ninterface PlayersListProps {\n  players: Player[];\n  searchTerm: string;\n  primaryColor: string;\n  onEdit: (player: Player) => void;\n  onDelete: (playerId: string) => void;\n}\n\nconst PlayersList: React.FC<PlayersListProps> = ({ \n  players, \n  searchTerm, \n  primaryColor, \n  onEdit, \n  onDelete \n}) => {\n  const filteredPlayers = players.filter(player => \n    player.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    player.position.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-md overflow-hidden\">\n      <table className=\"min-w-full divide-y divide-gray-200\">\n        <thead className=\"bg-gray-50\">\n          <tr>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n              №\n            </th>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n              Игрок\n            </th>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n              Позиция\n            </th>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n              Характеристики\n            </th>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n              Статистика\n            </th>\n            <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n              Действия\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-white divide-y divide-gray-200\">\n          {filteredPlayers.map((player) => (\n            <tr key={player.id} className=\"hover:bg-gray-50\">\n              <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div \n                  className=\"flex items-center justify-center w-8 h-8 rounded-full text-white font-medium text-sm\"\n                  style={{ backgroundColor: primaryColor || '#2e7d32' }}\n                >\n                  {player.number}\n                </div>\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0 h-10 w-10\">\n                    <img className=\"h-10 w-10 rounded-full object-cover\" src={player.image} alt={player.name} />\n                  </div>\n                  <div className=\"ml-4\">\n                    <div className=\"text-sm font-medium text-gray-900\">{player.name}</div>\n                    <div className=\"text-sm text-gray-500\">{player.nationality}</div>\n                  </div>\n                </div>\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">\n                <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                  {player.position}\n                </span>\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                {player.height} см, {player.weight} кг\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"px-2 py-1 text-xs rounded bg-blue-100 text-blue-800\">{player.matches} матчей</span>\n                  <span className=\"px-2 py-1 text-xs rounded bg-green-100 text-green-800\">{player.goals} голов</span>\n                  <span className=\"px-2 py-1 text-xs rounded bg-yellow-100 text-yellow-800\">{player.yellowCards} ЖК</span>\n                  <span className=\"px-2 py-1 text-xs rounded bg-red-100 text-red-800\">{player.redCards} КК</span>\n                </div>\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\"\n                  onClick={() => onEdit(player)}\n                  className=\"text-blue-600 hover:text-blue-900 mr-2\"\n                >\n                  <Pencil className=\"h-4 w-4\" />\n                </Button>\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\"\n                  onClick={() => onDelete(player.id)}\n                  className=\"text-red-600 hover:text-red-900\"\n                >\n                  <Trash className=\"h-4 w-4\" />\n                </Button>\n              </td>\n            </tr>\n          ))}\n          \n          {filteredPlayers.length === 0 && (\n            <tr>\n              <td colSpan={6} className=\"px-6 py-10 text-center text-gray-500\">\n                Игроки не найдены. Добавьте первого игрока!\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PlayersList;\n","\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { X } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport PlayerEditor from '@/pages/admin/PlayerEditor';\nimport { getPlayersByTeam, updatePlayer, deletePlayer, createPlayer } from '@/utils/players';\nimport { getTeamById } from '@/utils/teamsData';\nimport { Player } from '@/types/player';\nimport { toast } from '@/components/ui/use-toast';\nimport PlayerManagementHeader from '@/components/admin/players/PlayerManagementHeader';\nimport SearchBar from '@/components/admin/players/SearchBar';\nimport PlayersList from '@/components/admin/players/PlayersList';\n\nconst PlayersManagement = () => {\n  const [searchParams] = useSearchParams();\n  const teamId = searchParams.get('team') || 'gudauta';\n  \n  const [players, setPlayers] = useState<Player[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [editMode, setEditMode] = useState(false);\n  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(null);\n  \n  const team = getTeamById(teamId);\n  \n  useEffect(() => {\n    // Load players for the selected team\n    const teamPlayers = getPlayersByTeam(teamId);\n    setPlayers(teamPlayers);\n  }, [teamId]);\n\n  const handleEdit = (player: Player) => {\n    setCurrentPlayer(player);\n    setEditMode(true);\n  };\n\n  const handleDelete = (playerId: string) => {\n    if (window.confirm('Вы уверены, что хотите удалить этого игрока?')) {\n      try {\n        deletePlayer(playerId);\n        setPlayers(players.filter(p => p.id !== playerId));\n        toast({\n          title: \"Игрок удален\",\n          description: \"Игрок был успешно удален из системы\",\n        });\n      } catch (error) {\n        toast({\n          variant: \"destructive\",\n          title: \"Ошибка\",\n          description: \"Не удалось удалить игрока\",\n        });\n      }\n    }\n  };\n\n  const handleAddNew = () => {\n    const newPlayer: Player = {\n      id: `player-${Date.now()}`,\n      name: '',\n      position: 'Нападающий',\n      number: players.length + 1,\n      birthDate: '',\n      height: 180,\n      weight: 75,\n      nationality: 'Россия',\n      image: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1974&q=80',\n      matches: 0,\n      goals: 0,\n      assists: 0,\n      yellowCards: 0,\n      redCards: 0,\n      teamId: teamId\n    };\n    setCurrentPlayer(newPlayer);\n    setEditMode(true);\n  };\n\n  const handleSave = (updatedPlayer: Player) => {\n    try {\n      if (players.some(p => p.id === updatedPlayer.id)) {\n        // Update existing player\n        updatePlayer(updatedPlayer);\n        setPlayers(players.map(p => p.id === updatedPlayer.id ? updatedPlayer : p));\n        toast({\n          title: \"Игрок обновлен\",\n          description: \"Информация об игроке успешно обновлена\",\n        });\n      } else {\n        // Create new player\n        createPlayer(updatedPlayer);\n        setPlayers([...players, updatedPlayer]);\n        toast({\n          title: \"Игрок добавлен\",\n          description: \"Новый игрок успешно добавлен в систему\",\n        });\n      }\n      setEditMode(false);\n      setCurrentPlayer(null);\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Ошибка\",\n        description: \"Не удалось сохранить изменения\",\n      });\n    }\n  };\n\n  const handleCancel = () => {\n    setEditMode(false);\n    setCurrentPlayer(null);\n  };\n\n  return (\n    <div>\n      <PlayerManagementHeader \n        teamName={team?.name || 'Команда'} \n        primaryColor={team?.primaryColor || '#2e7d32'} \n        onAddNew={handleAddNew} \n      />\n      \n      {editMode && currentPlayer ? (\n        <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-xl font-bold\">\n              {currentPlayer.id.includes('player-') && !players.some(p => p.id === currentPlayer.id) \n                ? 'Добавить нового игрока' \n                : 'Редактировать игрока'\n              }\n            </h2>\n            <div className=\"flex space-x-2\">\n              <Button variant=\"outline\" size=\"sm\" onClick={handleCancel}>\n                <X className=\"mr-2 h-4 w-4\" /> Отмена\n              </Button>\n            </div>\n          </div>\n          \n          <PlayerEditor \n            player={currentPlayer} \n            onSave={handleSave} \n            onCancel={handleCancel} \n          />\n        </div>\n      ) : (\n        <>\n          <SearchBar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n          \n          <PlayersList \n            players={players}\n            searchTerm={searchTerm}\n            primaryColor={team?.primaryColor || '#2e7d32'}\n            onEdit={handleEdit}\n            onDelete={handleDelete}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PlayersManagement;\n"],"names":["PlayerBasicInfoForm","formData","handleChange","teams","getTeamsData","jsxs","jsx","Label","Input","team","PlayerPhysicalStatsForm","Fragment","PlayerMatchStatsForm","PlayerEditor","player","onSave","onCancel","setFormData","useState","__spreadValues","e","name","value","__spreadProps","handleSubmit","Button","X","Save","PlayerEditorPage","PlayerManagementHeader","teamName","primaryColor","onAddNew","Card","CardHeader","CardTitle","User","Plus","SearchBar","searchTerm","setSearchTerm","Search","PlayersList","players","onEdit","onDelete","filteredPlayers","Pencil","Trash","PlayersManagement","searchParams","useSearchParams","teamId","setPlayers","editMode","setEditMode","currentPlayer","setCurrentPlayer","getTeamById","useEffect","teamPlayers","getPlayersByTeam","handleEdit","handleDelete","playerId","deletePlayer","p","toast","error","handleAddNew","newPlayer","handleSave","updatedPlayer","updatePlayer","createPlayer","handleCancel"],"mappings":"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"}