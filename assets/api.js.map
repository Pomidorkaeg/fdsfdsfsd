{"version":3,"mappings":"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","names":["TournamentCard","id","title","type","season","teams","source","featured","jsx","Link","cn","jsxs","Trophy","ChevronRight","TournamentTable","lazy","__vitePreload","TableLoading","_","index","LazyTournamentTable","tournamentId","Suspense","getSffSiberiaData","__async","resolve","getFfnsoData","getTournamentTable","error","getTournamentsList"],"ignoreList":[],"sources":["../../src/components/TournamentCard.tsx","../../src/components/LazyTournamentTable.tsx","../../src/utils/api.ts"],"sourcesContent":["\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ChevronRight, Trophy } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface TournamentCardProps {\n  id: string;\n  title: string;\n  type: string;\n  season: string;\n  teams: number;\n  source: string;\n  featured?: boolean;\n}\n\nconst TournamentCard: React.FC<TournamentCardProps> = ({\n  id,\n  title,\n  type,\n  season,\n  teams,\n  source,\n  featured = false,\n}) => {\n  return (\n    <Link\n      to={`/tournaments/${id}`}\n      className={cn(\n        \"block rounded-xl overflow-hidden card-hover border transition-all duration-300\",\n        featured \n          ? \"bg-gradient-to-br from-fc-green/5 to-fc-green/20 border-fc-green\" \n          : \"bg-white border-gray-200 hover:border-fc-green/50\"\n      )}\n    >\n      <div className=\"p-6\">\n        <div className=\"mb-4 flex items-center justify-between\">\n          <div className={cn(\n            \"flex items-center justify-center w-12 h-12 rounded-full\",\n            featured ? \"bg-fc-green text-white\" : \"bg-fc-green/10 text-fc-green\"\n          )}>\n            <Trophy size={20} />\n          </div>\n          \n          <span className={cn(\n            \"text-sm font-medium px-3 py-1 rounded-full\",\n            featured ? \"bg-fc-yellow/20 text-fc-yellow\" : \"bg-gray-100 text-gray-600\"\n          )}>\n            {season}\n          </span>\n        </div>\n        \n        <h3 className={cn(\n          \"text-xl font-bold mb-2 line-clamp-2\",\n          featured ? \"text-fc-green\" : \"text-gray-800\"\n        )}>\n          {title}\n        </h3>\n        \n        <p className=\"text-gray-500 mb-4\">\n          {type}\n        </p>\n        \n        <div className=\"flex justify-between items-center pt-4 border-t border-gray-100\">\n          <div className=\"text-sm text-gray-500\">\n            {teams} команд\n          </div>\n          \n          <div className={cn(\n            \"flex items-center text-sm font-medium\",\n            featured ? \"text-fc-green\" : \"text-gray-600\"\n          )}>\n            Источник: {source}\n            <ChevronRight size={16} className=\"ml-1\" />\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default TournamentCard;\n","\nimport React, { lazy, Suspense } from 'react';\n\n// Lazy load the actual TournamentTable component\nconst TournamentTable = lazy(() => import('./TournamentTable'));\n\n// Improved loading placeholder with reduced animation\nconst TableLoading = () => (\n  <div className=\"animate-pulse\" style={{ animationDuration: '1.5s' }}>\n    <div className=\"h-8 bg-gray-200 rounded mb-4 w-1/3\"></div>\n    <div className=\"space-y-2\">\n      <div className=\"h-10 bg-gray-200 rounded\"></div>\n      {[...Array(4)].map((_, index) => (\n        <div key={index} className=\"h-12 bg-gray-100 rounded\"></div>\n      ))}\n    </div>\n  </div>\n);\n\n// Lightweight wrapper that handles the lazy loading\nconst LazyTournamentTable = ({ \n  tournamentId, \n  source \n}: { \n  tournamentId: string; \n  source: string \n}) => {\n  return (\n    <Suspense fallback={<TableLoading />}>\n      <TournamentTable tournamentId={tournamentId} source={source} />\n    </Suspense>\n  );\n};\n\nexport default LazyTournamentTable;\n","\nimport { toast } from '@/components/ui/use-toast';\n\n// Define interfaces for the API responses\nexport interface Team {\n  position: number;\n  name: string;\n  played: number;\n  won: number;\n  drawn: number;\n  lost: number;\n  goalsFor: number;\n  goalsAgainst: number;\n  goalDifference: number;\n  points: number;\n}\n\nexport interface TopScorer {\n  position: number;\n  name: string;\n  team: string;\n  goals: number;\n}\n\nexport interface Warning {\n  position: number;\n  name: string;\n  team: string;\n  warnings: number;\n}\n\nexport interface Expulsion {\n  position: number;\n  name: string;\n  team: string;\n  expulsions: number;\n}\n\nexport interface TournamentData {\n  title: string;\n  season: string;\n  lastUpdated: string;\n  teams: Team[];\n  topScorers: TopScorer[];\n  warnings: Warning[];\n  expulsions: Expulsion[];\n}\n\nexport interface Tournament {\n  id: string;\n  title: string;\n  type: string;\n  season: string;\n  teams: number;\n  source: string;\n  featured: boolean;\n}\n\n// Функция для получения данных с сайта МОО СФФ \"Сибирь\"\nexport const getSffSiberiaData = async (tournamentId: string): Promise<TournamentData> => {\n  console.log(`Fetching data from SFF-Siberia for tournament ID: ${tournamentId}`);\n  \n  // В реальном приложении здесь был бы API-запрос к прокси-серверу, который парсит данные с sff-siberia.ru\n  // Для демонстрации используем моковые данные с указанием реального источника\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        title: \"Кубок МОО СФФ «Сибирь» сезона 2024 года\",\n        season: \"2024\",\n        lastUpdated: new Date().toLocaleDateString('ru-RU'),\n        teams: [\n          { position: 1, name: \"«Енисей» (Красноярск)\", played: 7, won: 6, drawn: 1, lost: 0, goalsFor: 18, goalsAgainst: 4, goalDifference: 14, points: 19 },\n          { position: 2, name: \"«Бурятия» (Улан-Удэ)\", played: 7, won: 5, drawn: 1, lost: 1, goalsFor: 15, goalsAgainst: 8, goalDifference: 7, points: 16 },\n          { position: 3, name: \"«Распадская» (Междуреченск)\", played: 7, won: 4, drawn: 0, lost: 3, goalsFor: 9, goalsAgainst: 5, goalDifference: 4, points: 12 },\n          { position: 4, name: \"«Темп» (Барнаул)\", played: 7, won: 3, drawn: 2, lost: 2, goalsFor: 11, goalsAgainst: 8, goalDifference: 3, points: 11 },\n          { position: 5, name: \"«Рассвет» (Красноярск)\", played: 7, won: 2, drawn: 3, lost: 2, goalsFor: 9, goalsAgainst: 7, goalDifference: 2, points: 9 },\n          { position: 6, name: \"«Енисей-М» (Красноярск)\", played: 7, won: 1, drawn: 3, lost: 3, goalsFor: 7, goalsAgainst: 9, goalDifference: -2, points: 6 },\n          { position: 7, name: \"«Байкал» (Иркутск)\", played: 7, won: 1, drawn: 0, lost: 6, goalsFor: 5, goalsAgainst: 16, goalDifference: -11, points: 3 },\n          { position: 8, name: \"«Новокузнецк» (Новокузнецк)\", played: 7, won: 0, drawn: 2, lost: 5, goalsFor: 4, goalsAgainst: 15, goalDifference: -11, points: 2 },\n        ],\n        topScorers: [\n          { position: 1, name: \"Исаев Максим\", team: \"Енисей\", goals: 6 },\n          { position: 2, name: \"Рыбованов Алексей\", team: \"Бурятия\", goals: 5 },\n          { position: 3, name: \"Бекеровский Андрей\", team: \"Темп\", goals: 4 },\n          { position: 4, name: \"Винтер Даниил\", team: \"Рассвет\", goals: 3 },\n          { position: 5, name: \"Савченко Борис\", team: \"Енисей-М\", goals: 3 },\n        ],\n        warnings: [\n          { position: 1, name: \"Рыбованов Алексей\", team: \"Бурятия\", warnings: 4 },\n          { position: 2, name: \"Голополобов Евгений\", team: \"Распадская\", warnings: 4 },\n          { position: 3, name: \"Чуриков Даниил\", team: \"Енисей-М\", warnings: 3 },\n          { position: 4, name: \"Жариков Роман\", team: \"Темп\", warnings: 2 },\n          { position: 5, name: \"Голышев Александр\", team: \"Новокузнецк\", warnings: 2 },\n        ],\n        expulsions: [\n          { position: 1, name: \"Абдуллаев Степан\", team: \"Енисей-М\", expulsions: 1 },\n          { position: 2, name: \"Воропаев Кирилл\", team: \"Распадская\", expulsions: 1 },\n          { position: 3, name: \"Яковлев Егор\", team: \"Темп\", expulsions: 1 },\n          { position: 4, name: \"Пальму Ян\", team: \"Байкал\", expulsions: 1 },\n          { position: 5, name: \"Шориков Даниил\", team: \"Новокузнецк\", expulsions: 1 },\n        ]\n      });\n    }, 1000);\n  });\n};\n\n// Функция для получения данных с сайта ФФНСО\nexport const getFfnsoData = async (tournamentId: string): Promise<TournamentData> => {\n  console.log(`Fetching data from FFNSO for tournament ID: ${tournamentId}`);\n  \n  // В реальном приложении здесь был бы API-запрос к прокси-серверу, который парсит данные с ffnso.ru\n  // Для демонстрации используем моковые данные с указанием реального источника\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        title: \"Чемпионат города Новосибирска\",\n        season: \"2024\",\n        lastUpdated: new Date().toLocaleDateString('ru-RU'),\n        teams: [\n          { position: 1, name: \"«Спартак» (Новосибирск)\", played: 8, won: 7, drawn: 1, lost: 0, goalsFor: 22, goalsAgainst: 5, goalDifference: 17, points: 22 },\n          { position: 2, name: \"«Локомотив» (Новосибирск)\", played: 8, won: 6, drawn: 0, lost: 2, goalsFor: 18, goalsAgainst: 7, goalDifference: 11, points: 18 },\n          { position: 3, name: \"«НГТУ» (Новосибирск)\", played: 8, won: 5, drawn: 2, lost: 1, goalsFor: 15, goalsAgainst: 8, goalDifference: 7, points: 17 },\n          { position: 4, name: \"«Сибирь-М» (Новосибирск)\", played: 8, won: 4, drawn: 1, lost: 3, goalsFor: 14, goalsAgainst: 10, goalDifference: 4, points: 13 },\n          { position: 5, name: \"«Заря» (Новосибирск)\", played: 8, won: 3, drawn: 2, lost: 3, goalsFor: 12, goalsAgainst: 11, goalDifference: 1, points: 11 },\n          { position: 6, name: \"«Академия» (Новосибирск)\", played: 8, won: 3, drawn: 1, lost: 4, goalsFor: 10, goalsAgainst: 13, goalDifference: -3, points: 10 },\n          { position: 7, name: \"«Динамо» (Новосибирск)\", played: 8, won: 2, drawn: 1, lost: 5, goalsFor: 8, goalsAgainst: 15, goalDifference: -7, points: 7 },\n          { position: 8, name: \"«Металлург» (Новосибирск)\", played: 8, won: 0, drawn: 2, lost: 6, goalsFor: 4, goalsAgainst: 19, goalDifference: -15, points: 2 },\n          { position: 9, name: \"«Новосибирск-М» (Новосибирск)\", played: 8, won: 0, drawn: 0, lost: 8, goalsFor: 3, goalsAgainst: 18, goalDifference: -15, points: 0 },\n        ],\n        topScorers: [\n          { position: 1, name: \"Смирнов Илья\", team: \"Спартак\", goals: 8 },\n          { position: 2, name: \"Кузнецов Дмитрий\", team: \"Локомотив\", goals: 7 },\n          { position: 3, name: \"Соколов Артем\", team: \"НГТУ\", goals: 6 },\n          { position: 4, name: \"Новиков Кирилл\", team: \"Сибирь-М\", goals: 5 },\n          { position: 5, name: \"Морозов Александр\", team: \"Заря\", goals: 4 },\n        ],\n        warnings: [\n          { position: 1, name: \"Попов Сергей\", team: \"Локомотив\", warnings: 5 },\n          { position: 2, name: \"Лебедев Андрей\", team: \"Динамо\", warnings: 4 },\n          { position: 3, name: \"Козлов Максим\", team: \"Металлург\", warnings: 4 },\n          { position: 4, name: \"Новиков Кирилл\", team: \"Сибирь-М\", warnings: 3 },\n          { position: 5, name: \"Смирнов Илья\", team: \"Спартак\", warnings: 3 },\n        ],\n        expulsions: [\n          { position: 1, name: \"Козлов Максим\", team: \"Металлург\", expulsions: 2 },\n          { position: 2, name: \"Кузнецов Дмитрий\", team: \"Локомотив\", expulsions: 1 },\n          { position: 3, name: \"Соколов Артем\", team: \"НГТУ\", expulsions: 1 },\n          { position: 4, name: \"Лебедев Андрей\", team: \"Динамо\", expulsions: 1 },\n          { position: 5, name: \"Новиков Кирилл\", team: \"Сибирь-М\", expulsions: 1 },\n        ]\n      });\n    }, 1000);\n  });\n};\n\n// This would be a real API call in production\nexport const getTournamentTable = async (tournamentId: string, source: string): Promise<TournamentData> => {\n  console.log(`Fetching tournament data for ID: ${tournamentId} from source: ${source}`);\n  \n  try {\n    if (source === \"sff-siberia.ru\") {\n      return await getSffSiberiaData(tournamentId);\n    } else if (source === \"ffnso.ru\") {\n      return await getFfnsoData(tournamentId);\n    } else {\n      throw new Error(`Unknown data source: ${source}`);\n    }\n  } catch (error) {\n    console.error(\"Failed to fetch tournament data:\", error);\n    throw error;\n  }\n};\n\nexport const getTournamentsList = async (): Promise<Tournament[]> => {\n  console.log(\"Fetching tournaments list\");\n  \n  // В реальном приложении здесь был бы API-запрос\n  return new Promise((resolve) => {\n    // Simulate network request\n    setTimeout(() => {\n      // This is placeholder data - in a real app, this would come from the API\n      resolve([\n        {\n          id: \"siberia-cup-2024\",\n          title: \"Кубок МОО СФФ «Сибирь» 2024\",\n          type: \"Кубковый турнир\",\n          season: \"2024\",\n          teams: 16,\n          source: \"sff-siberia.ru\",\n          featured: true,\n        },\n        {\n          id: \"siberia-league-2024\",\n          title: \"Первенство МОО СФФ «Сибирь»\",\n          type: \"Регулярный чемпионат\",\n          season: \"2024\",\n          teams: 8,\n          source: \"sff-siberia.ru\",\n          featured: false,\n        },\n        {\n          id: \"novosibirsk-championship-2024\",\n          title: \"Чемпионат города Новосибирска\",\n          type: \"Городской чемпионат\",\n          season: \"2024\",\n          teams: 12,\n          source: \"ffnso.ru\",\n          featured: true,\n        },\n        {\n          id: \"novosibirsk-cup-2024\",\n          title: \"Кубок города Новосибирска\",\n          type: \"Кубковый турнир\",\n          season: \"2024\",\n          teams: 16,\n          source: \"ffnso.ru\",\n          featured: false,\n        },\n        {\n          id: \"novosibirsk-region-cup-2024\",\n          title: \"Кубок Новосибирской области\",\n          type: \"Региональный кубок\",\n          season: \"2024\",\n          teams: 18,\n          source: \"ffnso.ru\",\n          featured: false,\n        },\n      ]);\n    }, 1000);\n  });\n};\n\n// Функция для получения данных турнира\nexport const fetchTournamentData = async (tournamentId: string): Promise<TournamentData> => {\n  console.log(`Fetching data for tournament ID: ${tournamentId}`);\n  \n  // Определяем источник данных по ID турнира\n  let source = \"sff-siberia.ru\";\n  if ([\"novosibirsk-championship-2024\", \"novosibirsk-cup-2024\", \"novosibirsk-region-cup-2024\"].includes(tournamentId)) {\n    source = \"ffnso.ru\";\n  }\n  \n  try {\n    const data = await getTournamentTable(tournamentId, source);\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching tournament data:\", error);\n    toast({\n      variant: \"destructive\",\n      title: \"Ошибка загрузки\",\n      description: \"Не удалось загрузить данные турнира\",\n    });\n    throw error;\n  }\n};\n"],"file":"assets/api.js"}