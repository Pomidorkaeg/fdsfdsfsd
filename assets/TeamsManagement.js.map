{"version":3,"file":"TeamsManagement.js","sources":["../../src/pages/admin/TeamsManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Edit2, Shield, ImagePlus, Award, MapPin, Info, Star, Save, X } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { getTeamsData, updateTeam } from '@/utils/teamsData';\nimport { Team } from '@/types/team';\nimport { toast } from '@/components/ui/use-toast';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Globe, Instagram, Facebook, Twitter } from 'lucide-react';\nimport { db } from '@/lib/db';\nimport { useToast } from '@/components/ui/use-toast';\n\nconst TeamsManagement = () => {\n  const [teams, setTeams] = useState<Team[]>([]);\n  const [editingTeam, setEditingTeam] = useState<Team | null>(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedDescription, setEditedDescription] = useState('');\n  const [editedAddress, setEditedAddress] = useState('');\n  const [editedStats, setEditedStats] = useState({\n    matches: 0,\n    wins: 0,\n    draws: 0,\n    losses: 0,\n    goalsFor: 0,\n    goalsAgainst: 0,\n    points: 0\n  });\n  const { toast } = useToast();\n\n  useEffect(() => {\n    loadTeams();\n  }, []);\n\n  const loadTeams = async () => {\n    try {\n      const teamsData = await db.getTeams();\n      setTeams(teamsData);\n    } catch (error) {\n      console.error('Error loading teams:', error);\n      toast({\n        variant: \"destructive\",\n        title: \"Ошибка\",\n        description: \"Не удалось загрузить команды\",\n        });\n    }\n  };\n\n  const handleEdit = (team: Team) => {\n    setEditingTeam(team);\n    setEditedName(team.name);\n    setEditedDescription(team.description);\n    setEditedAddress(team.address);\n    setEditedStats(team.stats || {\n      matches: 0,\n      wins: 0,\n      draws: 0,\n      losses: 0,\n      goalsFor: 0,\n      goalsAgainst: 0,\n      points: 0\n    });\n  };\n  \n  const handleSave = async () => {\n    if (!editingTeam) return;\n  \n    const updatedTeam = {\n      ...editingTeam,\n      name: editedName,\n      description: editedDescription,\n      address: editedAddress,\n      stats: editedStats\n    };\n\n      try {\n      await db.updateTeam(updatedTeam);\n      setTeams(teams.map(team => team.id === updatedTeam.id ? updatedTeam : team));\n        toast({\n          title: \"Команда обновлена\",\n          description: \"Информация о команде успешно обновлена\",\n        });\n      setEditingTeam(null);\n      } catch (error) {\n        toast({\n          variant: \"destructive\",\n          title: \"Ошибка\",\n          description: \"Не удалось сохранить изменения\",\n        });\n      }\n  };\n\n  const handleCancel = () => {\n    setEditingTeam(null);\n  };\n  \n  return (\n    <div>\n      <Card className=\"mb-8 bg-gradient-to-br from-white to-gray-50\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <Shield className=\"h-5 w-5 mr-2 text-fc-green\" />\n            Управление командами\n          </CardTitle>\n          <CardDescription>\n            Настройка информации о командах клуба\n          </CardDescription>\n        </CardHeader>\n      </Card>\n      \n      <div className=\"grid grid-cols-1 gap-8\">\n        {teams.map((team) => (\n          <Card key={team.id} className=\"overflow-hidden\">\n            {editingTeam?.id === team.id ? (\n              <div className=\"p-6\">\n                <div className=\"flex justify-between items-center mb-6\">\n                  <h3 className=\"text-lg font-bold\">Редактирование команды</h3>\n                  <div className=\"space-x-2\">\n                    <Button variant=\"outline\" size=\"sm\" onClick={handleCancel}>\n                      <X className=\"h-4 w-4 mr-1\" /> Отмена\n                    </Button>\n                    <Button size=\"sm\" onClick={handleSave} className=\"bg-fc-green hover:bg-fc-darkGreen\">\n                      <Save className=\"h-4 w-4 mr-1\" /> Сохранить\n                    </Button>\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {/* Basic Info */}\n                  <div className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"name\">Название команды</Label>\n                      <Input \n                        id=\"name\" \n                        name=\"name\" \n                        value={editedName} \n                        onChange={(e) => setEditedName(e.target.value)} \n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"shortName\">Краткое название</Label>\n                      <Input \n                        id=\"shortName\" \n                        name=\"shortName\" \n                        value={team.shortName} \n                        onChange={(e) => {\n                          const updatedTeam = {\n                            ...team,\n                            shortName: e.target.value\n                          };\n                          setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                        }} \n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"logo\">URL логотипа</Label>\n                      <Input \n                        id=\"logo\" \n                        name=\"logo\" \n                        value={team.logo} \n                        onChange={(e) => {\n                          const updatedTeam = {\n                            ...team,\n                            logo: e.target.value\n                          };\n                          setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                        }} \n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"backgroundImage\">URL фонового изображения</Label>\n                      <Input \n                        id=\"backgroundImage\" \n                        name=\"backgroundImage\" \n                        value={team.backgroundImage} \n                        onChange={(e) => {\n                          const updatedTeam = {\n                            ...team,\n                            backgroundImage: e.target.value\n                          };\n                          setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                        }} \n                      />\n                    </div>\n                    \n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <Label htmlFor=\"primaryColor\">Основной цвет</Label>\n                        <div className=\"flex items-center space-x-2\">\n                          <div \n                            className=\"w-6 h-6 rounded-full border\"\n                            style={{ backgroundColor: team.primaryColor }}\n                          ></div>\n                          <Input \n                            id=\"primaryColor\" \n                            name=\"primaryColor\" \n                            value={team.primaryColor} \n                            onChange={(e) => {\n                              const updatedTeam = {\n                                ...team,\n                                primaryColor: e.target.value\n                              };\n                              setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                            }} \n                          />\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <Label htmlFor=\"secondaryColor\">Дополнительный цвет</Label>\n                        <div className=\"flex items-center space-x-2\">\n                          <div \n                            className=\"w-6 h-6 rounded-full border\"\n                            style={{ backgroundColor: team.secondaryColor }}\n                          ></div>\n                          <Input \n                            id=\"secondaryColor\" \n                            name=\"secondaryColor\" \n                            value={team.secondaryColor} \n                            onChange={(e) => {\n                              const updatedTeam = {\n                                ...team,\n                                secondaryColor: e.target.value\n                              };\n                              setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                            }} \n                          />\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"description\">Описание</Label>\n                      <Textarea \n                        id=\"description\" \n                        name=\"description\" \n                        value={editedDescription} \n                        onChange={(e) => setEditedDescription(e.target.value)} \n                        rows={4}\n                      />\n                    </div>\n                  </div>\n                  \n                  {/* Details */}\n                  <div className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"coach\">Главный тренер</Label>\n                      <Input \n                        id=\"coach\" \n                        name=\"coach\" \n                        value={team.coach} \n                        onChange={(e) => {\n                          const updatedTeam = {\n                            ...team,\n                            coach: e.target.value\n                          };\n                          setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                        }} \n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"foundedYear\">Год основания</Label>\n                      <Input \n                        id=\"foundedYear\" \n                        name=\"foundedYear\" \n                        type=\"number\"\n                        value={team.foundedYear} \n                        onChange={(e) => {\n                          const updatedTeam = {\n                            ...team,\n                            foundedYear: parseInt(e.target.value) || 0\n                          };\n                          setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                        }} \n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"stadium\">Стадион</Label>\n                      <Input \n                        id=\"stadium\" \n                        name=\"stadium\" \n                        value={team.stadium} \n                        onChange={(e) => {\n                          const updatedTeam = {\n                            ...team,\n                            stadium: e.target.value\n                          };\n                          setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                        }} \n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"address\">Адрес</Label>\n                      <Input \n                        id=\"address\" \n                        name=\"address\" \n                        value={editedAddress} \n                        onChange={(e) => setEditedAddress(e.target.value)} \n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"achievements\">Достижения (каждое с новой строки)</Label>\n                      <Textarea \n                        id=\"achievements\" \n                        name=\"achievements\" \n                        value={team.achievements.join('\\n')} \n                        onChange={(e) => {\n                          const updatedTeam = {\n                            ...team,\n                            achievements: e.target.value.split('\\n').filter(item => item.trim() !== '')\n                          };\n                          setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                        }} \n                        rows={4}\n                      />\n                    </div>\n                    \n                    <div className=\"space-y-3 border p-4 rounded-md\">\n                      <Label>Социальные сети</Label>\n                      \n                      <div>\n                        <Label htmlFor=\"socialLinks.website\" className=\"text-sm\">Вебсайт</Label>\n                        <Input \n                          id=\"socialLinks.website\" \n                          name=\"socialLinks.website\" \n                          value={team.socialLinks.website || ''} \n                          onChange={(e) => {\n                            const updatedTeam = {\n                              ...team,\n                              socialLinks: {\n                                ...team.socialLinks,\n                                website: e.target.value\n                              }\n                            };\n                            setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                          }} \n                          placeholder=\"https://example.com\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <Label htmlFor=\"socialLinks.instagram\" className=\"text-sm\">Instagram</Label>\n                        <Input \n                          id=\"socialLinks.instagram\" \n                          name=\"socialLinks.instagram\" \n                          value={team.socialLinks.instagram || ''} \n                          onChange={(e) => {\n                            const updatedTeam = {\n                              ...team,\n                              socialLinks: {\n                                ...team.socialLinks,\n                                instagram: e.target.value\n                              }\n                            };\n                            setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                          }} \n                          placeholder=\"https://instagram.com/teamname\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <Label htmlFor=\"socialLinks.facebook\" className=\"text-sm\">Facebook</Label>\n                        <Input \n                          id=\"socialLinks.facebook\" \n                          name=\"socialLinks.facebook\" \n                          value={team.socialLinks.facebook || ''} \n                          onChange={(e) => {\n                            const updatedTeam = {\n                              ...team,\n                              socialLinks: {\n                                ...team.socialLinks,\n                                facebook: e.target.value\n                              }\n                            };\n                            setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                          }} \n                          placeholder=\"https://facebook.com/teamname\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <Label htmlFor=\"socialLinks.twitter\" className=\"text-sm\">Twitter</Label>\n                        <Input \n                          id=\"socialLinks.twitter\" \n                          name=\"socialLinks.twitter\" \n                          value={team.socialLinks.twitter || ''} \n                          onChange={(e) => {\n                            const updatedTeam = {\n                              ...team,\n                              socialLinks: {\n                                ...team.socialLinks,\n                                twitter: e.target.value\n                              }\n                            };\n                            setTeams(teams.map(t => t.id === updatedTeam.id ? updatedTeam : t));\n                          }} \n                          placeholder=\"https://twitter.com/teamname\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <>\n                <div className=\"h-48 relative\">\n                  <div \n                    className=\"absolute inset-0\"\n                    style={{ \n                      backgroundImage: `url('${team.backgroundImage}')`,\n                      backgroundSize: 'cover',\n                      backgroundPosition: 'center',\n                    }}\n                  ></div>\n                  <div \n                    className=\"absolute inset-0\"\n                    style={{ \n                      background: `linear-gradient(to right, ${team.primaryColor}DD, ${team.secondaryColor}99)`,\n                    }}\n                  ></div>\n                  <div className=\"absolute inset-0 p-6 flex items-center\">\n                    <div className=\"flex items-center\">\n                      <img \n                        src={team.logo} \n                        alt={team.name} \n                        className=\"w-24 h-24 rounded-full object-cover border-4 border-white shadow-lg\"\n                      />\n                      <div className=\"ml-6\">\n                        <h3 className=\"text-3xl font-bold text-white drop-shadow-md\">\n                          {team.name}\n                        </h3>\n                        <p className=\"text-white text-opacity-90\">\n                          Основан в {team.foundedYear} году\n                        </p>\n                      </div>\n                    </div>\n                    <Button \n                      variant=\"secondary\" \n                      size=\"sm\" \n                      onClick={() => handleEdit(team)}\n                      className=\"absolute top-4 right-4 bg-white/20 backdrop-blur-sm hover:bg-white/30\"\n                    >\n                      <Edit2 className=\"h-4 w-4 mr-1\" /> Изменить\n                    </Button>\n                  </div>\n                </div>\n                \n                <CardContent className=\"pt-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <div className=\"flex items-center mb-3\">\n                        <Info className=\"w-5 h-5 mr-2 text-fc-green\" />\n                        <h4 className=\"font-semibold\">О команде</h4>\n                      </div>\n                      <p className=\"text-gray-600 mb-4\">\n                        {team.description}\n                      </p>\n                      \n                      <div className=\"flex items-center mt-6 mb-3\">\n                        <Star className=\"w-5 h-5 mr-2 text-fc-green\" />\n                        <h4 className=\"font-semibold\">Стадион</h4>\n                      </div>\n                      <p className=\"text-gray-600\">\n                        {team.stadium}\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <div className=\"flex items-center mb-3\">\n                        <Award className=\"w-5 h-5 mr-2 text-fc-green\" />\n                        <h4 className=\"font-semibold\">Достижения</h4>\n                      </div>\n                      <ul className=\"space-y-2\">\n                        {team.achievements.map((achievement, index) => (\n                          <li key={index} className=\"flex items-start\">\n                            <div className=\"w-1.5 h-1.5 rounded-full bg-fc-green mt-2 mr-2\"></div>\n                            <span className=\"text-gray-600\">{achievement}</span>\n                          </li>\n                        ))}\n                      </ul>\n                      \n                      <div className=\"flex items-center mt-6 mb-3\">\n                        <MapPin className=\"w-5 h-5 mr-2 text-fc-green\" />\n                        <h4 className=\"font-semibold\">Адрес</h4>\n                      </div>\n                      <p className=\"text-gray-600\">\n                        {team.address}\n                      </p>\n                    </div>\n                  </div>\n                  \n                  {/* Statistics Section */}\n                  <div className=\"mt-8 border-t pt-6\">\n                    <div className=\"flex items-center mb-4\">\n                      <Award className=\"w-5 h-5 mr-2 text-fc-green\" />\n                      <h4 className=\"font-semibold\">Статистика команды</h4>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"text-sm text-gray-500\">Матчи</div>\n                        <div className=\"text-2xl font-bold text-fc-green\">{team.stats?.matches || 0}</div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"text-sm text-gray-500\">Победы</div>\n                        <div className=\"text-2xl font-bold text-green-600\">{team.stats?.wins || 0}</div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"text-sm text-gray-500\">Ничьи</div>\n                        <div className=\"text-2xl font-bold text-yellow-600\">{team.stats?.draws || 0}</div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"text-sm text-gray-500\">Поражения</div>\n                        <div className=\"text-2xl font-bold text-red-600\">{team.stats?.losses || 0}</div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"text-sm text-gray-500\">Забито</div>\n                        <div className=\"text-2xl font-bold text-blue-600\">{team.stats?.goalsFor || 0}</div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"text-sm text-gray-500\">Пропущено</div>\n                        <div className=\"text-2xl font-bold text-red-600\">{team.stats?.goalsAgainst || 0}</div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"text-sm text-gray-500\">Разница</div>\n                        <div className=\"text-2xl font-bold text-gray-800\">\n                          {(team.stats?.goalsFor || 0) - (team.stats?.goalsAgainst || 0)}\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"text-sm text-gray-500\">Очки</div>\n                        <div className=\"text-2xl font-bold text-fc-green\">{team.stats?.points || 0}</div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mt-6 pt-4 border-t border-gray-100\">\n                    <div className=\"flex flex-wrap gap-2\">\n                      {team.socialLinks.website && (\n                        <div className=\"px-3 py-1 bg-gray-100 rounded text-sm text-gray-700 flex items-center\">\n                          <Globe className=\"w-4 h-4 mr-1\" />\n                          Сайт\n                        </div>\n                      )}\n                      {team.socialLinks.instagram && (\n                        <div className=\"px-3 py-1 bg-gradient-to-r from-purple-500 to-pink-500 rounded text-sm text-white flex items-center\">\n                          <Instagram className=\"w-4 h-4 mr-1\" />\n                          Instagram\n                        </div>\n                      )}\n                      {team.socialLinks.facebook && (\n                        <div className=\"px-3 py-1 bg-blue-600 rounded text-sm text-white flex items-center\">\n                          <Facebook className=\"w-4 h-4 mr-1\" />\n                          Facebook\n                        </div>\n                      )}\n                      {team.socialLinks.twitter && (\n                        <div className=\"px-3 py-1 bg-blue-400 rounded text-sm text-white flex items-center\">\n                          <Twitter className=\"w-4 h-4 mr-1\" />\n                          Twitter\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </>\n            )}\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TeamsManagement;\n"],"names":["TeamsManagement","teams","setTeams","useState","editingTeam","setEditingTeam","editedName","setEditedName","editedDescription","setEditedDescription","editedAddress","setEditedAddress","editedStats","setEditedStats","toast","useToast","useEffect","loadTeams","__async","teamsData","db","error","handleEdit","team","handleSave","updatedTeam","__spreadProps","__spreadValues","handleCancel","jsx","Card","jsxs","CardHeader","CardTitle","Shield","CardDescription","Button","X","Save","Label","Input","e","t","Textarea","item","Fragment","Edit2","CardContent","Info","Star","Award","achievement","index","MapPin","_a","_b","_c","_d","_e","_f","_g","_h","_i","Globe","Instagram","Facebook","Twitter"],"mappings":"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"}