{"version":3,"file":"coachesData.js","sources":["../../src/utils/coachesData.ts"],"sourcesContent":["\nimport { Coach } from '@/types/coach';\n\n// Initial sample coaches data\nconst initialCoaches: Coach[] = [\n  {\n    id: 'coach1',\n    name: 'Александр Иванов',\n    role: 'Главный тренер',\n    image: 'https://images.unsplash.com/photo-1560250097-0b93528c311a?ixlib=rb-4.0.3',\n    since: '2018',\n    experience: 15,\n    biography: 'Александр Иванов - опытный тренер с богатым опытом в профессиональном футболе. Под его руководством команда добилась значительных успехов на региональных соревнованиях.',\n    teamId: 'gudauta'\n  },\n  {\n    id: 'coach2',\n    name: 'Сергей Петров',\n    role: 'Тренер вратарей',\n    image: 'https://images.unsplash.com/photo-1566492031773-4f4e44671857?ixlib=rb-4.0.3',\n    since: '2019',\n    experience: 12,\n    biography: 'Сергей Петров специализируется на подготовке вратарей. Ранее выступал за профессиональные клубы России и имеет богатый опыт работы с молодыми спортсменами.',\n    teamId: 'gudauta'\n  },\n  {\n    id: 'coach3',\n    name: 'Дмитрий Александрович Сидоров',\n    role: 'Руководитель спортивной школы',\n    image: 'https://images.unsplash.com/photo-1571512599940-7dfed49b7e00?ixlib=rb-4.0.3',\n    since: '2015',\n    experience: 18,\n    biography: 'Дмитрий Александрович руководит спортивной школой Гудаута с момента её основания. Под его руководством была разработана уникальная методика подготовки молодых футболистов.',\n    teamId: 'gudauta-school'\n  },\n  {\n    id: 'coach4',\n    name: 'Андрей Кузнецов',\n    role: 'Тренер юношеских команд',\n    image: 'https://images.unsplash.com/photo-1595152452543-e5fc28ebc2b8?ixlib=rb-4.0.3',\n    since: '2020',\n    experience: 8,\n    biography: 'Андрей Кузнецов работает с юношескими командами различных возрастных категорий. Специализируется на начальной подготовке и развитии основных футбольных навыков.',\n    teamId: 'gudauta-school'\n  }\n];\n\n// Try to load coaches from localStorage, or use initialCoaches if not found\nconst loadCoaches = (): Coach[] => {\n  try {\n    const savedCoaches = localStorage.getItem('coaches');\n    if (savedCoaches) {\n      return JSON.parse(savedCoaches);\n    }\n  } catch (error) {\n    console.error('Failed to load coaches from localStorage:', error);\n  }\n  \n  // Save initial coaches to localStorage on first load\n  try {\n    localStorage.setItem('coaches', JSON.stringify(initialCoaches));\n  } catch (error) {\n    console.error('Failed to save initial coaches to localStorage:', error);\n  }\n  \n  return initialCoaches;\n};\n\n// Initialize coaches array\nlet coaches: Coach[] = loadCoaches();\n\n// Save coaches to localStorage\nconst saveCoaches = () => {\n  try {\n    localStorage.setItem('coaches', JSON.stringify(coaches));\n  } catch (error) {\n    console.error('Failed to save coaches to localStorage:', error);\n  }\n};\n\n// Get all coaches\nexport const getCoachesData = (): Coach[] => {\n  return [...coaches];\n};\n\n// Get coaches for a specific team\nexport const getCoachesByTeam = (teamId: string): Coach[] => {\n  return coaches.filter(coach => coach.teamId === teamId);\n};\n\n// Get a specific coach by ID\nexport const getCoachById = (id: string): Coach | undefined => {\n  return coaches.find(coach => coach.id === id);\n};\n\n// Update a coach\nexport const updateCoach = (updatedCoach: Coach): void => {\n  coaches = coaches.map(coach => \n    coach.id === updatedCoach.id ? updatedCoach : coach\n  );\n  \n  // Save changes to localStorage\n  saveCoaches();\n};\n\n// Add a new coach\nexport const createCoach = (newCoach: Coach): void => {\n  coaches.push(newCoach);\n  \n  // Save changes to localStorage\n  saveCoaches();\n};\n\n// Delete a coach\nexport const deleteCoach = (id: string): void => {\n  coaches = coaches.filter(coach => coach.id !== id);\n  \n  // Save changes to localStorage\n  saveCoaches();\n};\n"],"names":["initialCoaches","loadCoaches","savedCoaches","error","coaches","saveCoaches","getCoachesByTeam","teamId","coach","updateCoach","updatedCoach","createCoach","newCoach","deleteCoach","id"],"mappings":"AAIA,MAAMA,EAA0B,CAC9B,CACE,GAAI,SACJ,KAAM,mBACN,KAAM,iBACN,MAAO,2EACP,MAAO,OACP,WAAY,GACZ,UAAW,2KACX,OAAQ,SACV,EACA,CACE,GAAI,SACJ,KAAM,gBACN,KAAM,kBACN,MAAO,8EACP,MAAO,OACP,WAAY,GACZ,UAAW,8JACX,OAAQ,SACV,EACA,CACE,GAAI,SACJ,KAAM,gCACN,KAAM,gCACN,MAAO,8EACP,MAAO,OACP,WAAY,GACZ,UAAW,8KACX,OAAQ,gBACV,EACA,CACE,GAAI,SACJ,KAAM,kBACN,KAAM,0BACN,MAAO,8EACP,MAAO,OACP,WAAY,EACZ,UAAW,mKACX,OAAQ,gBACV,CACF,EAGMC,EAAc,IAAe,CAC7B,GAAA,CACI,MAAAC,EAAe,aAAa,QAAQ,SAAS,EACnD,GAAIA,EACK,OAAA,KAAK,MAAMA,CAAY,QAEzBC,EAAO,CACN,QAAA,MAAM,4CAA6CA,CAAK,CAClE,CAGI,GAAA,CACF,aAAa,QAAQ,UAAW,KAAK,UAAUH,CAAc,CAAC,QACvDG,EAAO,CACN,QAAA,MAAM,kDAAmDA,CAAK,CACxE,CAEO,OAAAH,CACT,EAGA,IAAII,EAAmBH,EAAY,EAGnC,MAAMI,EAAc,IAAM,CACpB,GAAA,CACF,aAAa,QAAQ,UAAW,KAAK,UAAUD,CAAO,CAAC,QAChDD,EAAO,CACN,QAAA,MAAM,0CAA2CA,CAAK,CAChE,CACF,EAQaG,EAAoBC,GACxBH,EAAQ,OAAgBI,GAAAA,EAAM,SAAWD,CAAM,EAS3CE,EAAeC,GAA8B,CACxDN,EAAUA,EAAQ,IAChBI,GAAAA,EAAM,KAAOE,EAAa,GAAKA,EAAeF,CAAA,EAIpCH,GACd,EAGaM,EAAeC,GAA0B,CACpDR,EAAQ,KAAKQ,CAAQ,EAGTP,GACd,EAGaQ,EAAeC,GAAqB,CAC/CV,EAAUA,EAAQ,OAAgBI,GAAAA,EAAM,KAAOM,CAAE,EAGrCT,GACd"}